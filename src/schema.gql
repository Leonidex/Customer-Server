# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CustomerEntity {
  id: ID!

  """Date and time when object was created."""
  createdAt: Timestamp!

  """Date and time when the object was updated last time."""
  updatedAt: Timestamp!
  email: String!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type RequestStatusOutput {
  status: RequestStatusEnum!
}

enum RequestStatusEnum {
  SUCCESS
  FAILURE
}

type LoginOutput {
  accessToken: String!
  refreshToken: String!
}

type SignUpOutput {
  accessToken: String!
  refreshToken: String!
}

type Query {
  findMany(filter: FindManyCustomerInput!): [CustomerEntity!]!
}

input FindManyCustomerInput {
  cursor: String
  skip: Int
  take: Int
  where: WhereCustomerInput!
}

input WhereCustomerInput {
  identifier: WhereUniqueCustomerInput!
  createdAt: Timestamp
  updatedAt: Timestamp
}

input WhereUniqueCustomerInput {
  id: String
  email: String
}

type Mutation {
  updateOne(data: UpdateOneCustomerInput!): CustomerEntity!
  removeOne(where: WhereUniqueCustomerInput!): CustomerEntity!
  activateCustomer(data: ActivateOneCustomerInput!): RequestStatusOutput!
  signUp(credentials: SignUpInput!): SignUpOutput!
  login(credentials: LoginInput!): LoginOutput!
  getNewAccessToken(data: RefreshTokenInput!): LoginOutput!
}

input UpdateOneCustomerInput {
  customer: CreateCustomerInput!
  where: WhereCustomerInput
}

input CreateCustomerInput {
  email: String!
  password: String!
}

input ActivateOneCustomerInput {
  where: WhereCustomerInput!
  activationCode: String!
}

input SignUpInput {
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshTokenInput {
  token: String!
  cursor: String!
}